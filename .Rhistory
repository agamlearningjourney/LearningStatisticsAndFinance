knitr::opts_chunk$set(echo = TRUE)
mtcars
colnames(mtcars)
dim(mtcars)
PCA_res <- prcomp(mtcars)
View(PCA_res)
PCA_res$sdev
PCA_res$rotation
PCA_res$center
PCA_res$scale
PCA_res$x
summary(PCA_res)
PCA_res$sdev
PCA_res$rotation
?mtcars
PCA_res <- prcomp(mtcars, scale. = TRUE)
PCA_res$sdev
PCA_res$rotation
summary(PCA_res)
PCA_res$sdev
PCA_res$rotation
library(tidyverse)
mtcars %>%
summarise_all(.funs = list( ~ mean(.)) )
mtcars %>%
summarise_all(.funs = list( ~ min(.)) )
mtcars %>%
summarise_all(.funs = list( ~ max(.)) )
mtcars %>%
summarise_all(.funs = list( ~ mean(.)) )
mtcars %>%
summarise_all(.funs = list( ~ min(.)) )
mtcars %>%
summarise_all(.funs = list( ~ max(.)) )
PCA_res$rotation
install.packages("YieldCurve")
install.packages("ustyc")
df_yield_curve <- getYieldCurve(year = NULL, month = NULL,
base = "http://data.treasury.gov/feed.svc/DailyTreasuryYieldCurveRateData",
allowParallel = FALSE)
library(ustyc) # to use getYieldCurve
df_yield_curve <- getYieldCurve(year = NULL, month = NULL,
base = "http://data.treasury.gov/feed.svc/DailyTreasuryYieldCurveRateData",
allowParallel = FALSE)
df_yield_curve <- getYieldCurve(year = 2020, month = 1,
base = "http://data.treasury.gov/feed.svc/DailyTreasuryYieldCurveRateData",
allowParallel = FALSE)
library(ustyc) # to use getYieldCurve
df_yield_curve <- getYieldCurve(year = 2020, month = NULL,
base = "http://data.treasury.gov/feed.svc/DailyTreasuryYieldCurveRateData",
allowParallel = FALSE)
df_yield_curve <- getYieldCurve(year = 2000, month = NULL,
base = "http://data.treasury.gov/feed.svc/DailyTreasuryYieldCurveRateData",
allowParallel = FALSE)
df_yield_curve <- getYieldCurve()
data(FedYieldCurve)
rate.Fed = first(FedYieldCurve,'5 month')
library(tidyquant) # to use getYieldCurve
?tq_get
library(quantmod)
getSymbols.FRED()
getSymbols('CPIAUCNS',src='FRED')
View(CPIAUCNS)
df_yield_curve <- tq_get(c("T6MFF"), get = "economic.data")
View(df_yield_curve)
library(tidyquant) # to use getYieldCurve
df_yield_curve <- tq_get(c("T6MFF"), get = "economic.data",
from = "1982-01-01" )
View(df_yield_curve)
```{r}
library(tidyquant) # to use getYieldCurve
## download: 3-Month, 6-Month, 1-year,  Treasury Constant Maturity Minus Federal Funds Rate
df_yield_curve <- tq_get(c("T3MFF", "T6MFF", "T1YFF", "T5YFF", "T10YFF"),
get = "economic.data",
from = "1982-01-01" )
View(df_yield_curve)
sapply(df_yield_curve, class)
View(df_yield_curve)
## check
df_yield_curve %>%
filter(date == "2021-11-18")
df_yield_curve %>%
filter(date == "2021-11-18") %>%
arrange(symbol)
df_yield_curve %>%
filter(date == "2021-11-18")
unique(df_yield_curve$symbol)
df_yield_curve2 <- tq_get(c("T1YFF"),
get = "economic.data",
from = "1982-01-01" )
View(df_yield_curve2)
## download: 3,6-Month, 1,5,10-year,  Treasury Constant Maturity Minus Federal Funds Rate
df_yield_curve <- tq_get(c("T3MFF", "T6MFF", "T1YFF", "T5YFF", "T10YFF"),
get = "economic.data",
from = "1982-01-01" )
sapply(df_yield_curve, class)
unique(df_yield_curve$symbol)
df_yield_curve %>%
filter(date == "2021-11-18")
## check
df_yield_curve %>%
filter(date == "2021-11-18") %>%
mutate(rn= row_number()) %>%
ggplot(aes(x = rn, y = price))
## check
df_yield_curve %>%
filter(date == "2021-11-18") %>%
mutate(rn= row_number()) %>%
ggplot(aes(x = rn, y = price)) +
geom_point()
View(df_yield_curve)
unique(df_yield_curve$symbol)
View(df_yield_curve)
var_order = case_when(
symbol == "T3MFF" ~ 3/12,
symbol == "T6MFF" ~ 6/12,
symbol == "T1YFF" ~ 1,
symbol == "T5YFF" ~ 5,
symbol == "T10YFF" ~ 10,
)) %>%
## check
df_yield_curve %>%
filter(date == "2021-11-18") %>%
mutate(
var_order = case_when(
symbol == "T3MFF" ~ 3/12,
symbol == "T6MFF" ~ 6/12,
symbol == "T1YFF" ~ 1,
symbol == "T5YFF" ~ 5,
symbol == "T10YFF" ~ 10,
)) %>%
ggplot(aes(x = var_order, y = price)) +
geom_point()
df_yield_curve %>%
filter(
# date == "2021-11-18",
month(date) == 12,
)
var_order = case_when(
symbol == "T3MFF" ~ 3/12,
symbol == "T6MFF" ~ 6/12,
symbol == "T1YFF" ~ 1,
symbol == "T5YFF" ~ 5,
symbol == "T10YFF" ~ 10,
)) %>%
## check
df_yield_curve %>%
filter(
# date == "2021-11-18",
month(date) == 12,
) %>%
mutate(
var_order = case_when(
symbol == "T3MFF" ~ 3/12,
symbol == "T6MFF" ~ 6/12,
symbol == "T1YFF" ~ 1,
symbol == "T5YFF" ~ 5,
symbol == "T10YFF" ~ 10,
)) %>%
ggplot(aes(x = var_order, y = price)) +
geom_point() +
facet_wrap(facets = vars(date))
## check
df_yield_curve %>%
filter(
# date == "2021-11-18",
date >- "2010-01-01",
month(date) == 12,
) %>%
mutate(
var_order = case_when(
symbol == "T3MFF" ~ 3/12,
symbol == "T6MFF" ~ 6/12,
symbol == "T1YFF" ~ 1,
symbol == "T5YFF" ~ 5,
symbol == "T10YFF" ~ 10,
)) %>%
ggplot(aes(x = var_order, y = price)) +
geom_point() +
facet_wrap(facets = vars(date))
## check
df_yield_curve %>%
filter(
# date == "2021-11-18",
date >= "2010-01-01",
month(date) == 12,
) %>%
mutate(
var_order = case_when(
symbol == "T3MFF" ~ 3/12,
symbol == "T6MFF" ~ 6/12,
symbol == "T1YFF" ~ 1,
symbol == "T5YFF" ~ 5,
symbol == "T10YFF" ~ 10,
)) %>%
ggplot(aes(x = var_order, y = price)) +
geom_point() +
facet_wrap(facets = vars(date))
## check
df_yield_curve %>%
filter(
# date == "2021-11-18",
date >= "2019-01-01",
month(date) == 12,
) %>%
mutate(
var_order = case_when(
symbol == "T3MFF" ~ 3/12,
symbol == "T6MFF" ~ 6/12,
symbol == "T1YFF" ~ 1,
symbol == "T5YFF" ~ 5,
symbol == "T10YFF" ~ 10,
)) %>%
ggplot(aes(x = var_order, y = price)) +
geom_point() +
facet_wrap(facets = vars(date))
## check
df_yield_curve %>%
group_by(mont(date), year(date)) %>%
filter(row_number() == n()) %>%
ungroup() %>%
filter(
# date == "2021-11-18",
date >= "2019-01-01",
# month(date) == 12,
) %>%
mutate(
var_order = case_when(
symbol == "T3MFF" ~ 3/12,
symbol == "T6MFF" ~ 6/12,
symbol == "T1YFF" ~ 1,
symbol == "T5YFF" ~ 5,
symbol == "T10YFF" ~ 10,
)) %>%
ggplot(aes(x = var_order, y = price)) +
geom_point() +
facet_wrap(facets = vars(date))
library(lubridate)
## check
df_yield_curve %>%
group_by(month(date), year(date)) %>%
filter(row_number() == n()) %>%
ungroup() %>%
filter(
# date == "2021-11-18",
date >= "2019-01-01",
# month(date) == 12,
) %>%
mutate(
var_order = case_when(
symbol == "T3MFF" ~ 3/12,
symbol == "T6MFF" ~ 6/12,
symbol == "T1YFF" ~ 1,
symbol == "T5YFF" ~ 5,
symbol == "T10YFF" ~ 10,
)) %>%
ggplot(aes(x = var_order, y = price)) +
geom_point() +
facet_wrap(facets = vars(date))
## check
df_plot <- df_yield_curve %>%
group_by(month(date), year(date)) %>%
filter(row_number() == n()) %>%
ungroup() %>%
filter(
# date == "2021-11-18",
date >= "2019-01-01",
# month(date) == 12,
) %>%
mutate(
var_order = case_when(
symbol == "T3MFF" ~ 3/12,
symbol == "T6MFF" ~ 6/12,
symbol == "T1YFF" ~ 1,
symbol == "T5YFF" ~ 5,
symbol == "T10YFF" ~ 10,
))
View(df_plot)
## check
df_plot <- df_yield_curve %>%
## select date where all data available
group_by(date) %>%
mutate(non_empty = sum(!is.na(price))) %>%
ungroup()
View(df_plot)
## check
df_plot <- df_yield_curve %>%
## select date where all data available
group_by(date) %>%
mutate(non_empty = sum(!is.na(price))) %>%
ungroup() %>%
filter(non_empty == 5)
View(df_plot)
## check
df_plot <- df_yield_curve %>%
## select date where all data available
group_by(date) %>%
mutate(non_empty = sum(!is.na(price))) %>%
ungroup() %>%
filter(non_empty == 5) %>%
## select the last date in a year, where all data available
group_by(year(date)) %>%
filter(row_number() == n()) %>%
ungroup() %>%
filter(
# date == "2021-11-18",
date >= "2010-01-01",
# month(date) == 12,
) %>%
mutate(
var_order = case_when(
symbol == "T3MFF" ~ 3/12,
symbol == "T6MFF" ~ 6/12,
symbol == "T1YFF" ~ 1,
symbol == "T5YFF" ~ 5,
symbol == "T10YFF" ~ 10,
))
View(df_plot)
## plot
df_plot %>%
ggplot(aes(x = var_order, y = price)) +
geom_point() +
facet_wrap(facets = vars(date))
View(df_plot)
View(df_yield_curve)
View(df_yield_curve)
## check
df_plot <- df_yield_curve %>%
## select date where all data available
group_by(date) %>%
mutate(non_empty = sum(!is.na(price))) %>%
ungroup() %>%
filter(non_empty == 5) %>%
## select the last date in a year, where all data available
group_by(symbol, year(date)) %>%
filter(row_number() == n()) %>%
ungroup() %>%
filter(
# date == "2021-11-18",
date >= "2010-01-01",
# month(date) == 12,
) %>%
mutate(
var_order = case_when(
symbol == "T3MFF" ~ 3/12,
symbol == "T6MFF" ~ 6/12,
symbol == "T1YFF" ~ 1,
symbol == "T5YFF" ~ 5,
symbol == "T10YFF" ~ 10,
))
## plot
df_plot %>%
ggplot(aes(x = var_order, y = price)) +
geom_point() +
facet_wrap(facets = vars(date))
## plot
df_plot %>%
ggplot(aes(x = var_order, y = price)) +
geom_point() +
geom_line() +
facet_wrap(facets = vars(date))
## make plot at each end of month
df_plot <- df_yield_curve %>%
## select date where all data available
group_by(date) %>%
mutate(non_empty = sum(!is.na(price))) %>%
ungroup() %>%
filter(non_empty == 5) %>%
## select the last date in a year, where all data available
group_by(symbol, year(date), month(date)) %>%
filter(row_number() == n()) %>%
ungroup() %>%
filter(
# date == "2021-11-18",
date >= "2018-01-01",
# month(date) == 12,
) %>%
mutate(
var_order = case_when(
symbol == "T3MFF" ~ 3/12,
symbol == "T6MFF" ~ 6/12,
symbol == "T1YFF" ~ 1,
symbol == "T5YFF" ~ 5,
symbol == "T10YFF" ~ 10,
))
View(df_plot)
## make plot at each end of month
df_plot <- df_yield_curve %>%
## select date where all data available
group_by(date) %>%
mutate(non_empty = sum(!is.na(price))) %>%
ungroup() %>%
filter(non_empty == 5) %>%
## select the last date in a year, where all data available
group_by(symbol, year(date), month(date)) %>%
filter(row_number() == n()) %>%
ungroup() %>%
filter(
# date == "2021-11-18",
date >= "2018-01-01",
# month(date) == 12,
) %>%
mutate(
var_order = case_when(
symbol == "T3MFF" ~ 3/12,
symbol == "T6MFF" ~ 6/12,
symbol == "T1YFF" ~ 1,
symbol == "T5YFF" ~ 5,
symbol == "T10YFF" ~ 10,
))
## plot
df_plot %>%
ggplot(aes(x = var_order, y = price)) +
geom_point() +
geom_line() +
facet_wrap(facets = vars(date))
View(df_yield_curve)
View(df_yield_curve)
df_PCA <- df_yield_curve %>%
spread(key = symbol, value = price)
View(df_PCA)
df_PCA <- df_yield_curve %>%
spread(key = symbol, value = price) %>%
drop_na()
View(df_PCA)
View(df_PCA)
PCA_res <- prcomp(as.matrix(df_PCA[,-c("date")] ),
scale. = TRUE)
PCA_res <- prcomp(as.matrix(df_PCA %>% select(-c(date)) ),
scale. = TRUE)
summary(PCA_res)
PCA_res$sdev
PCA_res$rotation
plot(PCA_res)
cor(PCA_res$x)
round(cor(PCA_res$x),2)
summary(PCA_res)
PCA_res$sdev
summary(PCA_res)
PCA_res$sdev
plot(PCA_res)
PCA_res$sdev^2/sum(PCA_res$sdev^2)
PCA_res$sdev^2/sum(PCA_res$sdev^2)
summary(PCA_res)
PCA_res$sdev^2/sum(PCA_res$sdev^2)
df_plot <- tibble(
var = PCA_res$sdev^2/sum(PCA_res$sdev^2)
PC = 1:5
df_plot <- tibble(
var = PCA_res$sdev^2/sum(PCA_res$sdev^2),
PC = 1:5
)
View(df_plot)
df_plot <- tibble(
PC = 1:5,
var = PCA_res$sdev^2/sum(PCA_res$sdev^2),
)
df_plot <- df_plot %>%
mutate(cumsumvar = cumsum(var))
View(df_plot)
View(df_plot)
df_plot %>%
ggplot(aes(x = PC, y = cumsumvar)) +
geom_bar()
df_plot %>%
ggplot(aes(x = PC, y = cumsumvar)) +
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
df_plot %>%
ggplot(aes(x = PC, y = var)) +
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyquant) # to use getYieldCurve
library(lubridate)
library(tidyverse)
## download: 3,6-Month, 1,5,10-year,  Treasury Constant Maturity Minus Federal Funds Rate
df_yield_curve <- tq_get(c("T3MFF", "T6MFF", "T1YFF", "T5YFF", "T10YFF"),
get = "economic.data",
from = "1982-01-01" )
PCA_res$rotation
sym(PCA_res$rotation[,1]^2)
sum(PCA_res$rotation[,1]^2)
sum(PCA_res$rotation[,2]^2)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyquant) # to use getYieldCurve
library(lubridate)
library(tidyverse)
library(quantmod)
## download: 3,6-Month, 1,5,10-year,  Treasury Constant Maturity Minus Federal Funds Rate
df_yield_curve <- tq_get(c("T3MFF", "T6MFF", "T1YFF", "T5YFF", "T10YFF"),
get = "economic.data",
from = "1982-01-01" )
sapply(df_yield_curve, class)
unique(df_yield_curve$symbol)
?save
## save
save(df_yield_curve, file = "df_yield_curve.RData" )
getwd()
?load
##### LOAD SAVED DATA
load(file = "df_yield_curve.RData" )
getwd()
